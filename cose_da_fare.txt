
/////refactory massivo//////

classe device da cui derivano tutti gli altri componenti (fatto)-va implememnatta poi nelel altre parti

clock serio(lasciato invaraito, siccoem ho bus non serve)

pipeline(da fare, classe piu classi polimorfich per sateg e passare dati tar di loro)

conclusione instruction set

cache pazzurda pazza sgravata


////////////////////////////////////////////////









!!IMPLEMENTARE SIGN EXTENSION IN MOV,SUB,ADD PRIMA DI PASSARE AD ALTRE ISTRUZIONI(CAPIRE COME FARE LOGICA GENERALE SENZA CASO PER CASO)


!!!!IMPLEMTARE RESULT PER TUTTI I COMPONETI OLTRE a (CACHE MANAGER,ram, operands) al momento la propagazione
di result si ferma al fetch in cu e nell istruction!!!


//funzioni per modificare grandezza ram e cache
////modificare grandezza memoria dal bus

//flame grafh(FATTO, va solo compilato quando si vuole eseguire profiling)


//fixare add,sub,etc quandio ce imm32 con rex(64bit extension)

//controllo big indian 

//controllare i prefissi sbagliati (ad esempio 0x66 quando ho 8 bit)

//capire cosa fare con prefisso 0x67

//alto livello: separazione tra instruction e visitor



controllare overflow neL CALCOLO DEGLI INDIRIZZI





//controllo errori in decodifica c6 e c7 move, se reg non Ã¨ 000 errore



//Uso della costante 0b111 per il controllo dei bit (MASK)


//aggiungere metodi per accedere ai byte inferiori di tutti i registri


//AZZERARE 32BIT ALTI IN SCRITTURA REGISTRI(TIPO MOVE)


///NOTE//

non esisto i registri alti per 8 bit AH, CH, DH, BH vengono sempre utilizzati SPL, BPL, SIL, DIL (gli ultimi 8 bit finali di RSP, RBP, RSI, RDI), come se ci fosse sempre il prefisso rex

solo long mode 64 bit

i nomi dei registri non cambiano in base alla grandezza, pero posso scrivere 8/16/32 nei registri a 64 bit

solo alu, no fpu, no vector unit, solo gpr e senza cs e ss e rimasugli da 32 bit

